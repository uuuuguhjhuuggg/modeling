pip install pygame numpy
import pygame
import sys
import math
import numpy as np

# Initialize Pygame
pygame.init()

# Screen settings
WIDTH, HEIGHT = 1000, 650
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Electromagnetic Induction Simulation")

# Colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (200, 30, 30)
BLUE = (30, 30, 200)
YELLOW = (255, 255, 150)
GRAY = (150, 150, 150)
DARK_GRAY = (80, 80, 80)
GREEN = (50, 200, 50)

# Fonts
font = pygame.font.SysFont('Arial', 24)
title_font = pygame.font.SysFont('Arial', 32, bold=True)
small_font = pygame.font.SysFont('Arial', 18)

# Coil settings
coil_center = (WIDTH // 2, HEIGHT // 2 + 40)
coil_radius = 70
coil_turns = 12

# Magnet (smaller)
magnet_width = 90
magnet_height = 45
magnet_y = coil_center[1] - magnet_height // 2
magnet_x = 150
prev_magnet_x = magnet_x

# Bulb (larger and higher)
bulb_pos = (coil_center[0], coil_center[1] - 160)
bulb_radius = 35

# Field lines
field_lines = []
for i in range(12):
    field_lines.append({'pos': 0, 'y_offset': (i - 6) * 15, 'visible': False})

# Current history for graph
current_history = np.zeros(200)
current_index = 0
current_direction = 1  # 1 for clockwise, -1 for counter-clockwise

def draw_coil():
    spacing = 10
    for i in range(coil_turns):
        offset = i * spacing - (coil_turns * spacing) // 2
        pygame.draw.ellipse(screen, DARK_GRAY,
                            (coil_center[0] + offset - coil_radius // 2,
                             coil_center[1] - coil_radius // 2,
                             coil_radius, coil_radius), 2)

    # Draw current direction indicator
    arrow_y = coil_center[1] + coil_radius + 20
    if current_direction == 1:
        pygame.draw.arc(screen, GREEN, (coil_center[0] - 30, arrow_y - 15, 60, 30),
                        math.pi/2, 3*math.pi/2, 2)
        pygame.draw.polygon(screen, GREEN, [(coil_center[0], arrow_y - 15),
                                            (coil_center[0] - 10, arrow_y),
                                            (coil_center[0] + 10, arrow_y)])
    else:
        pygame.draw.arc(screen, GREEN, (coil_center[0] - 30, arrow_y - 15, 60, 30),
                        3*math.pi/2, math.pi/2, 2)
        pygame.draw.polygon(screen, GREEN, [(coil_center[0], arrow_y + 15),
                                            (coil_center[0] - 10, arrow_y),
                                            (coil_center[0] + 10, arrow_y)])

def draw_magnet(x):
    pygame.draw.rect(screen, BLUE, (x, magnet_y, magnet_width // 2, magnet_height))
    pygame.draw.rect(screen, RED, (x + magnet_width // 2, magnet_y, magnet_width // 2, magnet_height))
    n_label = font.render("N", True, WHITE)
    s_label = font.render("S", True, WHITE)
    screen.blit(n_label, (x + magnet_width // 4 - 5, magnet_y + magnet_height // 2 - 10))
    screen.blit(s_label, (x + 3 * magnet_width // 4 - 5, magnet_y + magnet_height // 2 - 10))

def draw_bulb(brightness):
    pygame.draw.line(screen, BLACK, (coil_center[0] - coil_turns * 5, coil_center[1]),
                     (bulb_pos[0] - 25, bulb_pos[1] + bulb_radius - 5), 3)
    pygame.draw.line(screen, BLACK, (coil_center[0] + coil_turns * 5, coil_center[1]),
                     (bulb_pos[0] + 25, bulb_pos[1] + bulb_radius - 5), 3)
    pygame.draw.rect(screen, GRAY, (bulb_pos[0] - 20, bulb_pos[1] + bulb_radius - 10, 40, 15))
    bulb_color = (255, 255, min(100 + brightness // 2, 255))
    pygame.draw.circle(screen, bulb_color, bulb_pos, bulb_radius)
    if brightness > 100:
        for angle in range(0, 360, 30):
            rad = math.radians(angle)
            end_x = bulb_pos[0] + math.cos(rad) * (bulb_radius + brightness // 15)
            end_y = bulb_pos[1] + math.sin(rad) * (bulb_radius + brightness // 15)
            pygame.draw.line(screen, (255, 220, 0), bulb_pos, (end_x, end_y), 2)

def draw_field_lines(x_pos):
    for line in field_lines:
        if x_pos < WIDTH // 2 - 100 or x_pos > WIDTH // 2 + 100:
            line['visible'] = False
            continue
        line['visible'] = True
        line['pos'] = x_pos
        start_x = x_pos + magnet_width
        end_x = coil_center[0] - coil_radius - 20
        if start_x < end_x:
            y_pos = coil_center[1] + line['y_offset']
            pygame.draw.line(screen, BLUE, (start_x, y_pos), (end_x, y_pos), 1)

def calculate_current(dx):
    speed = abs(dx)
    current = min(int(speed * 8), 255)
    global current_direction
    if dx > 0:
        current_direction = -1
    elif dx < 0:
        current_direction = 1
    return current

def draw_current_graph():
    graph_x = WIDTH - 250
    graph_y = 50
    graph_width = 200
    graph_height = 150
    pygame.draw.rect(screen, WHITE, (graph_x, graph_y, graph_width, graph_height))
    pygame.draw.rect(screen, BLACK, (graph_x, graph_y, graph_width, graph_height), 2)
    pygame.draw.line(screen, GRAY, (graph_x, graph_y + graph_height // 2),
                     (graph_x + graph_width, graph_y + graph_height // 2), 1)
    title = font.render("Induced Current", True, BLACK)
    screen.blit(title, (graph_x + 40, graph_y - 25))
    pos_label = small_font.render("(+)", True, GREEN)
    neg_label = small_font.render("(-)", True, RED)
    screen.blit(pos_label, (graph_x + graph_width + 5, graph_y + 10))
    screen.blit(neg_label, (graph_x + graph_width + 5, graph_y + graph_height - 20))
    for i in range(1, len(current_history)):
        x1 = graph_x + (i - 1) * graph_width / len(current_history)
        y1 = graph_y + graph_height // 2 - current_history[i - 1] * graph_height / 510 * current_direction
        x2 = graph_x + i * graph_width / len(current_history)
        y2 = graph_y + graph_height // 2 - current_history[i] * graph_height / 510 * current_direction
        color = GREEN if y2 < graph_y + graph_height // 2 else RED
        pygame.draw.line(screen, color, (x1, y1), (x2, y2), 2)

# Main loop
clock = pygame.time.Clock()
running = True

while running:
    screen.fill(WHITE)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    mouse_pressed = pygame.mouse.get_pressed()[0]
    mouse_x, mouse_y = pygame.mouse.get_pos()

    if mouse_pressed and magnet_y < mouse_y < magnet_y + magnet_height:
        magnet_x = mouse_x - magnet_width // 2

    dx = magnet_x - prev_magnet_x
    current = calculate_current(dx)
    prev_magnet_x = magnet_x
    current_history[current_index] = current
    current_index = (current_index + 1) % len(current_history)

    draw_coil()
    draw_magnet(magnet_x)
    draw_bulb(current)
    draw_field_lines(magnet_x)
    draw_current_graph()

    title = title_font.render("Electromagnetic Induction Simulation", True, BLACK)
    screen.blit(title, (WIDTH // 2 - title.get_width() // 2, 15))
    instructions = font.render("Drag the magnet to induce current in the coil", True, BLACK)
    screen.blit(instructions, (WIDTH // 2 - instructions.get_width() // 2, HEIGHT - 30))
    direction_text = "Current Direction: " + ("Clockwise" if current_direction == 1 else "Counter-clockwise")
    dir_label = font.render(direction_text, True, GREEN if current_direction == 1 else RED)
    screen.blit(dir_label, (20, HEIGHT - 60))

    pygame.display.flip()
    clock.tick(60)

pygame.quit()
sys.exit()
